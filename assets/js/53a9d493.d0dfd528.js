"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[354],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return u}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),m=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c=function(e){var n=m(e.components);return t.createElement(i.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(r),u=a,d=p["".concat(i,".").concat(u)]||p[u]||g[u]||o;return r?t.createElement(d,s(s({ref:n},c),{},{components:r})):t.createElement(d,s({ref:n},c))}));function u(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=p;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var m=2;m<o;m++)s[m]=r[m];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1881:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return c},default:function(){return p}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],l={id:"gorm",title:"Gorm"},i="Gorm\u8fde\u63a5PostgreSql\u3001Sqlite\u3001Sqlserver\u7684\u4ee3\u7801+\u914d\u7f6e\u6307\u5357",m={unversionedId:"gorm",id:"gorm",isDocsHomePage:!1,title:"Gorm",description:"PostgreSql",source:"@site/docs/gorm.md",sourceDirName:".",slug:"/gorm",permalink:"/docs/gorm",tags:[],version:"current",frontMatter:{id:"gorm",title:"Gorm"}},c=[{value:"PostgreSql",id:"postgresql",children:[{value:"server/config/gorm.go",id:"serverconfiggormgo",children:[],level:3},{value:"server/config/config.go",id:"serverconfigconfiggo",children:[],level:3},{value:"server/config.yaml",id:"serverconfigyaml",children:[],level:3},{value:"server/initialize/gorm_postgresql.go",id:"serverinitializegorm_postgresqlgo",children:[],level:3},{value:"server/initialize/gorm.go",id:"serverinitializegormgo",children:[],level:3}],level:2},{value:"Sqlite",id:"sqlite",children:[{value:"server/config/gorm.go",id:"serverconfiggormgo-1",children:[],level:3},{value:"server/config/config.go",id:"serverconfigconfiggo-1",children:[],level:3},{value:"server/config.yaml",id:"serverconfigyaml-1",children:[],level:3},{value:"server/initialize/gorm_sqlite.go",id:"serverinitializegorm_sqlitego",children:[],level:3},{value:"server/initialize/gorm.go",id:"serverinitializegormgo-1",children:[],level:3}],level:2},{value:"Sqlserver",id:"sqlserver",children:[{value:"server/config/gorm.go",id:"serverconfiggormgo-2",children:[],level:3},{value:"server/config/config.go",id:"serverconfigconfiggo-2",children:[],level:3},{value:"server/config.yaml",id:"serverconfigyaml-2",children:[],level:3},{value:"server/initialize/gorm_sqlserver.go",id:"serverinitializegorm_sqlservergo",children:[],level:3},{value:"server/initialize/gorm.go",id:"serverinitializegormgo-2",children:[],level:3}],level:2}],g={toc:c};function p(e){var n=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},g,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gorm\u8fde\u63a5postgresqlsqlitesqlserver\u7684\u4ee3\u7801\u914d\u7f6e\u6307\u5357"},"Gorm\u8fde\u63a5PostgreSql\u3001Sqlite\u3001Sqlserver\u7684\u4ee3\u7801+\u914d\u7f6e\u6307\u5357"),(0,o.kt)("h2",{id:"postgresql"},"PostgreSql"),(0,o.kt)("h3",{id:"serverconfiggormgo"},"server/config/gorm.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6dfb\u52a0Postgresql\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Postgresql struct {\n    Host                 string `mapstructure:"host" json:"host" yaml:"host"`\n    Port                 string `mapstructure:"port" json:"port" yaml:"port"`\n    Config               string `mapstructure:"config" json:"config" yaml:"config"`\n    Dbname               string `mapstructure:"db-name" json:"dbname" yaml:"db-name"`\n    Username             string `mapstructure:"username" json:"username" yaml:"username"`\n    Password             string `mapstructure:"password" json:"password" yaml:"password"`\n    MaxIdleConns         int    `mapstructure:"max-idle-conns" json:"maxIdleConns" yaml:"max-idle-conns"`\n    MaxOpenConns         int    `mapstructure:"max-open-conns" json:"maxOpenConns" yaml:"max-open-conns"`\n    PreferSimpleProtocol bool   `mapstructure:"prefer-simple-protocol" json:"preferSimpleProtocol" yaml:"prefer-simple-protocol"`\n    Logger               bool   `mapstructure:"logger" json:"logger" yaml:"logger"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigconfiggo"},"server/config/config.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728Server\u7ed3\u6784\u4f53\u6dfb\u52a0Postgresql\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Server struct {\n    JWT     JWT     `mapstructure:"jwt" json:"jwt" yaml:"jwt"`\n    Zap     Zap     `mapstructure:"zap" json:"zap" yaml:"zap"`\n    Redis   Redis   `mapstructure:"redis" json:"redis" yaml:"redis"`\n    Email   Email   `mapstructure:"email" json:"email" yaml:"email"`\n    Casbin  Casbin  `mapstructure:"casbin" json:"casbin" yaml:"casbin"`\n    System  System  `mapstructure:"system" json:"system" yaml:"system"`\n    Captcha Captcha `mapstructure:"captcha" json:"captcha" yaml:"captcha"`\n    // gorm\n    Mysql      Mysql      `mapstructure:"mysql" json:"mysql" yaml:"mysql"`\n    Postgresql Postgresql `mapstructure:"postgresql" json:"postgresql" yaml:"postgresql"`\n    // oss\n    Local Local `mapstructure:"local" json:"local" yaml:"local"`\n    Qiniu Qiniu `mapstructure:"qiniu" json:"qiniu" yaml:"qiniu"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigyaml"},"server/config.yaml"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728server/config.yaml\u6dfb\u52a0\u5bf9\u5e94Postgresql\u7ed3\u6784\u4f53\u7684\u914d\u7f6e\u4fe1\u606f")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Postgresql connect configuration\npostgresql:\n  host: '127.0.0.1'\n  port: '9920'\n  config: 'sslmode=disable TimeZone=Asia/Shanghai'\n  db-name: 'gorm'\n  username: 'gorm'\n  password: 'gorm'\n  max-idle-conns: 10\n  max-open-conns: 10\n  prefer-simple-protocol: true\n  logger: false\n")),(0,o.kt)("h3",{id:"serverinitializegorm_postgresqlgo"},"server/initialize/gorm_postgresql.go"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u6ce8\u610f")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"gorm_postgresql.go\u6587\u4ef6\u9700\u8981\u81ea\u5df1\u65b0\u5efa"),(0,o.kt)("li",{parentName:"ol"},"\u51fd\u6570GormPostgreSql()\u4e3aGorm\u8fde\u63a5PostgreSql\u7684\u51fd\u6570\u65b9\u6cd5")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package initialize\n\nimport (\n    "gin-vue-admin/global"\n    "go.uber.org/zap"\n    "gorm.io/driver/postgres"\n    "gorm.io/gorm"\n    "os"\n)\n\n// GormPostgreSql \u521d\u59cb\u5316PostgreSql\u6570\u636e\u5e93\nfunc GormPostgreSql() *gorm.DB {\n    p := global.GVA_CONFIG.Postgresql\n    dsn := "host="+ p.Host + " user=" + p.Username + " password=" + p.Password + " dbname=" + p.Dbname + " port=" + p.Port + " " + p.Config\n    postgresConfig := postgres.Config{\n        DSN:                  dsn,                    // DSN data source name\n        PreferSimpleProtocol: p.PreferSimpleProtocol, // \u7981\u7528\u9690\u5f0f prepared statement\n    }\n    gormConfig := gormConfig(p.Logger)\n    if db, err := gorm.Open(postgres.New(postgresConfig), gormConfig); err != nil {\n        global.GVA_LOG.Error("PostgreSql\u542f\u52a8\u5f02\u5e38", zap.Any("err", err))\n        os.Exit(0)\n        return nil\n    } else {\n        sqlDB, _ := db.DB()\n        sqlDB.SetMaxIdleConns(p.MaxIdleConns)\n        sqlDB.SetMaxOpenConns(p.MaxOpenConns)\n        return db\n    }\n}\n')),(0,o.kt)("h3",{id:"serverinitializegormgo"},"server/initialize/gorm.go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Gorm \u521d\u59cb\u5316\u6570\u636e\u5e93\u5e76\u4ea7\u751f\u6570\u636e\u5e93\u5168\u5c40\u53d8\u91cf\nfunc Gorm() *gorm.DB {\n    switch global.GVA_CONFIG.System.DbType {\n    case "mysql":\n        return GormMysql()\n    case "postgresql":\n        return GormPostgreSql()\n    default:\n        return GormMysql()\n    }\n}\n')),(0,o.kt)("h2",{id:"sqlite"},"Sqlite"),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"windows\u7528\u6237\u9700\u8981\u6ce8\u610f")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"\u521d\u59cb\u5316Sqlite\u6570\u636e\u5e93 sqlite\u9700\u8981gcc\u652f\u6301 windows\u7528\u6237\u9700\u8981\u81ea\u884c\u5b89\u88c5gcc")))),(0,o.kt)("h3",{id:"serverconfiggormgo-1"},"server/config/gorm.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6dfb\u52a0Sqlite\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Sqlite struct {\n    Path         string `mapstructure:"path" json:"path" yaml:"path"`\n    MaxIdleConns int    `mapstructure:"max-idle-conns" json:"maxIdleConns" yaml:"max-idle-conns"`\n    MaxOpenConns int    `mapstructure:"max-open-conns" json:"maxOpenConns" yaml:"max-open-conns"`\n    Logger       bool   `mapstructure:"logger" json:"logger" yaml:"logger"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigconfiggo-1"},"server/config/config.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728Server\u7ed3\u6784\u4f53\u6dfb\u52a0Sqlite\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Server struct {\n    JWT     JWT     `mapstructure:"jwt" json:"jwt" yaml:"jwt"`\n    Zap     Zap     `mapstructure:"zap" json:"zap" yaml:"zap"`\n    Redis   Redis   `mapstructure:"redis" json:"redis" yaml:"redis"`\n    Email   Email   `mapstructure:"email" json:"email" yaml:"email"`\n    Casbin  Casbin  `mapstructure:"casbin" json:"casbin" yaml:"casbin"`\n    System  System  `mapstructure:"system" json:"system" yaml:"system"`\n    Captcha Captcha `mapstructure:"captcha" json:"captcha" yaml:"captcha"`\n    // gorm\n    Mysql      Mysql      `mapstructure:"mysql" json:"mysql" yaml:"mysql"`\n    Sqlite     Sqlite     `mapstructure:"sqlite" json:"sqlite" yaml:"sqlite"`\n    // oss\n    Local Local `mapstructure:"local" json:"local" yaml:"local"`\n    Qiniu Qiniu `mapstructure:"qiniu" json:"qiniu" yaml:"qiniu"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigyaml-1"},"server/config.yaml"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728server/config.yaml\u4e2d\u6dfb\u52a0Sqlite\u7ed3\u6784\u4f53\u7684\u914d\u7f6e\u4fe1\u606f")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# sqlite connect configuration (sqlite\u9700\u8981gcc\u652f\u6301 windows\u7528\u6237\u9700\u8981\u81ea\u884c\u5b89\u88c5gcc)\nsqlite:\n  path: 'db.db'\n  max-idle-conns: 10\n  max-open-conns: 10\n  logger: true\n")),(0,o.kt)("h3",{id:"serverinitializegorm_sqlitego"},"server/initialize/gorm_sqlite.go"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"windows\u7528\u6237\u9700\u8981\u6ce8\u610f")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"gorm_sqlite.go\u6587\u4ef6\u9700\u8981\u81ea\u5df1\u65b0\u5efa"),(0,o.kt)("li",{parentName:"ol"},"\u51fd\u6570GormSqlite()\u4e3aGorm\u8fde\u63a5Sqlite\u7684\u51fd\u6570\u65b9\u6cd5")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package initialize\n\nimport (\n    "gorm.io/driver/sqlite"\n\n    "gin-vue-admin/global"\n    "go.uber.org/zap"\n    "gorm.io/gorm"\n    "os"\n)\n\n// GormSqlite \u521d\u59cb\u5316Sqlite\u6570\u636e\u5e93 sqlite\u9700\u8981gcc\u652f\u6301 windows\u7528\u6237\u9700\u8981\u81ea\u884c\u5b89\u88c5gcc \u5982\u9700\u4f7f\u7528\u6253\u5f00\u6ce8\u91ca\u5373\u53ef\nfunc GormSqlite() *gorm.DB {\n    s := global.GVA_CONFIG.Sqlite\n    if db, err := gorm.Open(sqlite.Open(s.Path), gormConfig(s.Logger)); err != nil {\n        global.GVA_LOG.Error("Sqlite\u542f\u52a8\u5f02\u5e38", zap.Any("err", err))\n        os.Exit(0)\n        return nil\n    } else {\n        sqlDB, _ := db.DB()\n        sqlDB.SetMaxIdleConns(s.MaxIdleConns)\n        sqlDB.SetMaxOpenConns(s.MaxOpenConns)\n        return db\n    }\n}\n')),(0,o.kt)("h3",{id:"serverinitializegormgo-1"},"server/initialize/gorm.go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Gorm \u521d\u59cb\u5316\u6570\u636e\u5e93\u5e76\u4ea7\u751f\u6570\u636e\u5e93\u5168\u5c40\u53d8\u91cf\nfunc Gorm() *gorm.DB {\n    switch global.GVA_CONFIG.System.DbType {\n    case "mysql":\n        return GormMysql()\n    case "sqlite": // sqlite\u9700\u8981gcc\u652f\u6301 windows\u7528\u6237\u9700\u8981\u81ea\u884c\u5b89\u88c5gcc\n        return GormSqlite()\n    default:\n        return GormMysql()\n    }\n}\n')),(0,o.kt)("h2",{id:"sqlserver"},"Sqlserver"),(0,o.kt)("h3",{id:"serverconfiggormgo-2"},"server/config/gorm.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6dfb\u52a0Sqlserver\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Sqlserver struct {\n    Path         string `mapstructure:"path" json:"path" yaml:"path"`\n    Dbname       string `mapstructure:"db-name" json:"dbname" yaml:"db-name"`\n    Username     string `mapstructure:"username" json:"username" yaml:"username"`\n    Password     string `mapstructure:"password" json:"password" yaml:"password"`\n    MaxIdleConns int    `mapstructure:"max-idle-conns" json:"maxIdleConns" yaml:"max-idle-conns"`\n    MaxOpenConns int    `mapstructure:"max-open-conns" json:"maxOpenConns" yaml:"max-open-conns"`\n    Logger       bool   `mapstructure:"logger" json:"logger" yaml:"logger"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigconfiggo-2"},"server/config/config.go"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728Server\u7ed3\u6784\u4f53\u6dfb\u52a0Sqlserver\u7ed3\u6784\u4f53")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package config\n\ntype Server struct {\n    JWT     JWT     `mapstructure:"jwt" json:"jwt" yaml:"jwt"`\n    Zap     Zap     `mapstructure:"zap" json:"zap" yaml:"zap"`\n    Redis   Redis   `mapstructure:"redis" json:"redis" yaml:"redis"`\n    Email   Email   `mapstructure:"email" json:"email" yaml:"email"`\n    Casbin  Casbin  `mapstructure:"casbin" json:"casbin" yaml:"casbin"`\n    System  System  `mapstructure:"system" json:"system" yaml:"system"`\n    Captcha Captcha `mapstructure:"captcha" json:"captcha" yaml:"captcha"`\n    // gorm\n    Mysql      Mysql      `mapstructure:"mysql" json:"mysql" yaml:"mysql"`\n    Sqlserver  Sqlserver  `mapstructure:"sqlserver" json:"sqlserver" yaml:"sqlserver"`\n    // oss\n    Local Local `mapstructure:"local" json:"local" yaml:"local"`\n    Qiniu Qiniu `mapstructure:"qiniu" json:"qiniu" yaml:"qiniu"`\n}\n')),(0,o.kt)("h3",{id:"serverconfigyaml-2"},"server/config.yaml"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728server/config.yaml\u4e2d\u6dfb\u52a0Sqlserver\u7ed3\u6784\u4f53\u7684\u914d\u7f6e\u4fe1\u606f")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Sqlserver connect configuration\nsqlserver:\n  path: 'localhost:9930'\n  db-name: 'gorm'\n  username: 'gorm'\n  password: 'LoremIpsum86'\n  max-idle-conns: 10\n  max-open-conns: 10\n  logger: true\n\n")),(0,o.kt)("h3",{id:"serverinitializegorm_sqlservergo"},"server/initialize/gorm_sqlserver.go"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u60a8\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"gorm_sqlserver.go\u6587\u4ef6\u9700\u8981\u81ea\u5df1\u65b0\u5efa"),(0,o.kt)("li",{parentName:"ol"},"\u51fd\u6570GormSqlServer()\u4e3aGorm\u8fde\u63a5Sqlite\u7684\u51fd\u6570\u65b9\u6cd5")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package initialize\n\nimport (\n    "gin-vue-admin/global"\n    "os"\n\n    "go.uber.org/zap"\n    "gorm.io/driver/sqlserver"\n    "gorm.io/gorm"\n)\n\n// GormSqlServer \u521d\u59cb\u5316SqlServer\u6570\u636e\u5e93\nfunc GormSqlServer() *gorm.DB {\n    ss := global.GVA_CONFIG.Sqlserver\n    dsn := "sqlserver://" + ss.Username + ":" + ss.Password + "@" + ss.Path + "?database=" + ss.Dbname\n    if db, err := gorm.Open(sqlserver.Open(dsn), &gorm.Config{}); err != nil {\n        global.GVA_LOG.Error("SqlServer\u542f\u52a8\u5f02\u5e38", zap.Any("err", err))\n        os.Exit(0)\n        return nil\n    } else {\n        sqlDB, _ := db.DB()\n        sqlDB.SetMaxIdleConns(ss.MaxIdleConns)\n        sqlDB.SetMaxOpenConns(ss.MaxOpenConns)\n        return db\n    }\n}\n\n')),(0,o.kt)("h3",{id:"serverinitializegormgo-2"},"server/initialize/gorm.go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Gorm \u521d\u59cb\u5316\u6570\u636e\u5e93\u5e76\u4ea7\u751f\u6570\u636e\u5e93\u5168\u5c40\u53d8\u91cf\nfunc Gorm() *gorm.DB {\n    switch global.GVA_CONFIG.System.DbType {\n    case "mysql":\n        return GormMysql()\n    case "sqlserver":\n            return GormSqlServer()\n    default:\n        return GormMysql()\n    }\n}\n')))}p.isMDXComponent=!0}}]);