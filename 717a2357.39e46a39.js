(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{106:function(e,n,r){"use strict";r.d(n,"a",(function(){return p})),r.d(n,"b",(function(){return b}));var t=r(0),o=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=o.a.createContext({}),u=function(e){var n=o.a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=u(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=t,b=p["".concat(a,".").concat(m)]||p[m]||g[m]||i;return r?o.a.createElement(b,l(l({ref:n},c),{},{components:r})):o.a.createElement(b,l({ref:n},c))}));function b(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:t,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},75:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return a})),r.d(n,"metadata",(function(){return l})),r.d(n,"rightToc",(function(){return s})),r.d(n,"default",(function(){return u}));var t=r(2),o=r(6),i=(r(0),r(106)),a={id:"oss",title:"oss"},l={unversionedId:"oss",id:"oss",isDocsHomePage:!1,title:"oss",description:"\u6b64\u65b9\u6848\u7531 ccfish86 \u63d0\u4f9b,gva\u56e2\u961f\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u5e76\u9002\u914d, pr\u94fe\u63a5",source:"@site/docs/oss.md",permalink:"/docs/oss"},s=[{value:"server/config/oss.go",id:"serverconfigossgo",children:[]},{value:"server/config/config.go",id:"serverconfigconfiggo",children:[]},{value:"server/config.yaml",id:"serverconfigyaml",children:[]},{value:"server/utils/upload.go",id:"serverutilsuploadgo",children:[]},{value:"server/utils/local.go",id:"serverutilslocalgo",children:[]},{value:"server/utils/qiniu.go",id:"serverutilsqiniugo",children:[]},{value:"server/utils/minio.go",id:"serverutilsminiogo",children:[]},{value:"server/utils/aliyun.go",id:"serverutilsaliyungo",children:[]}],c={rightToc:s};function u(e){var n=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},c,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u6b64\u65b9\u6848\u7531 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/ccfish86"}),"ccfish86")," \u63d0\u4f9b,gva\u56e2\u961f\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u5e76\u9002\u914d, ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/flipped-aurora/gin-vue-admin/pull/232"}),"pr\u94fe\u63a5")),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"Minio\u9700\u8981\u81ea\u884c\u642d\u5efa\u73af\u5883,\u963f\u91cc\u4e91\u9700\u8981\u8d2d\u4e70\u7a7a\u95f4,\u6240\u4ee5\u4e0d\u653e\u5728 ",Object(i.b)("a",Object(t.a)({parentName:"li"},{href:"https://github.com/flipped-aurora/gin-vue-admin"}),"gin-vue-admin")," \u91cc"))),Object(i.b)("h2",{id:"serverconfigossgo"},"server/config/oss.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package config\n\ntype Local struct {\n    Path string `mapstructure:"path" json:"path" yaml:"path" `\n}\n\ntype Qiniu struct {\n    Zone          string `mapstructure:"zone" json:"zone" yaml:"zone"`\n    Bucket        string `mapstructure:"bucket" json:"bucket" yaml:"bucket"`\n    ImgPath       string `mapstructure:"img-path" json:"imgPath" yaml:"img-path"`\n    UseHTTPS      bool   `mapstructure:"use-https" json:"useHttps" yaml:"use-https"`\n    AccessKey     string `mapstructure:"access-key" json:"accessKey" yaml:"access-key"`\n    SecretKey     string `mapstructure:"secret-key" json:"secretKey" yaml:"secret-key"`\n    UseCdnDomains bool   `mapstructure:"use-cdn-domains" json:"useCdnDomains" yaml:"use-cdn-domains"`\n}\n\ntype Minio struct {\n    Id       string `mapstructure:"id" json:"id" yaml:"id"`\n    Path     string `mapstructure:"path" json:"path" yaml:"path"`\n    Token    string `mapstructure:"token" json:"token" yaml:"token"`\n    Bucket   string `mapstructure:"bucket" json:"bucket" yaml:"bucket"`\n    UseSsl   bool   `mapstructure:"use-ssl" json:"useSsl" yaml:"use-ssl"`\n    Secret   string `mapstructure:"secret" json:"secret" yaml:"secret"`\n    Endpoint string `mapstructure:"endpoint" json:"endpoint" yaml:"endpoint"`\n}\n\ntype Aliyun struct {\n    Path             string `mapstructure:"path" json:"path" yaml:"path"`\n    Bucket           string `mapstructure:"bucket" json:"bucket" yaml:"bucket"`\n    ACLType          string `mapstructure:"acl-type" json:"aclType" yaml:"acl-type"`\n    Endpoint         string `mapstructure:"endpoint" json:"endpoint" yaml:"endpoint"`\n    AccessKeyID      string `mapstructure:"access-key-id" json:"accessKeyId" yaml:"access-key-id"`\n    SecretAccessKey  string `mapstructure:"secret-access-key" json:"secretAccessKey" yaml:"secret-access-key"`\n    StorageClassType string `mapstructure:"storage-class-type" json:"storageClassType" yaml:"storage-class-type"`\n}\n')),Object(i.b)("h2",{id:"serverconfigconfiggo"},"server/config/config.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'type Server struct {\n    JWT     JWT     `mapstructure:"jwt" json:"jwt" yaml:"jwt"`\n    Zap     Zap     `mapstructure:"zap" json:"zap" yaml:"zap"`\n    Redis   Redis   `mapstructure:"redis" json:"redis" yaml:"redis"`\n    Email   Email   `mapstructure:"email" json:"email" yaml:"email"`\n    Casbin  Casbin  `mapstructure:"casbin" json:"casbin" yaml:"casbin"`\n    System  System  `mapstructure:"system" json:"system" yaml:"system"`\n    Captcha Captcha `mapstructure:"captcha" json:"captcha" yaml:"captcha"`\n\n    Mysql      Mysql      `mapstructure:"mysql" json:"mysql" yaml:"mysql"`\n    Postgresql Postgresql `mapstructure:"postgresql" json:"postgresql" yaml:"postgresql"`\n    Sqlite     Sqlite     `mapstructure:"sqlite" json:"sqlite" yaml:"sqlite"`\n    Sqlserver  Sqlserver  `mapstructure:"sqlserver" json:"sqlserver" yaml:"sqlserver"`\n\n    Local  Local  `mapstructure:"local" json:"local" yaml:"local"`\n    Qiniu  Qiniu  `mapstructure:"qiniu" json:"qiniu" yaml:"qiniu"`\n    Minio  Minio  `mapstructure:"minio" json:"minio" yaml:"minio"`\n    Aliyun Aliyun `mapstructure:"aliyun" json:"aliyun" yaml:"aliyun"`\n}\n')),Object(i.b)("h2",{id:"serverconfigyaml"},"server/config.yaml"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"# local configuration\nlocal:\n  path: 'uploads/file'\n\n# qiniu configuration (\u8bf7\u81ea\u884c\u4e03\u725b\u7533\u8bf7\u5bf9\u5e94\u7684 \u516c\u94a5 \u79c1\u94a5 bucket \u548c \u57df\u540d\u5730\u5740)\nqiniu:\n  zone: 'ZoneHuadong'\n  bucket: 'qm-plus-img'\n  img-path: 'http://qmplusimg.henrongyi.top'\n  use-https: false\n  access-key: '25j8dYBZ2wuiy0yhwShytjZDTX662b8xiFguwxzZ'\n  secret-key: 'pgdbqEsf7ooZh7W3xokP833h3dZ_VecFXPDeG5JY'\n  use-cdn-domains: false\n\n# minio configuration\nminio:\n  id: 'minio'\n  path: 'http://localhost:9000'\n  token: ''\n  bucket: 'public'\n  use-ssl: false\n  secret: 'minio1234'\n  endpoint: 'localhost:9000'\n\n# aliyun configuration\naliyun:\n  path : 'https://xxx.oss-cn-beijing.aliyuncs.com'\n  bucket : 'xxx'\n  acl-type : ''\n  endpoint : 'https://oss-cn-beijing.aliyuncs.com'\n  access-key-id : 'xxxxxxx'\n  secret-access-key : 'xxxxxxx'\n  storage-class-type : 'Standard' # \u5b58\u50a8\u6876\u5b58\u50a8\u7c7b\u578b\n")),Object(i.b)("h2",{id:"serverutilsuploadgo"},"server/utils/upload.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package upload\n\nimport (\n    "fmt"\n    "gin-vue-admin/global"\n    "mime/multipart"\n    "time"\n)\n\nvar Oss OSS\n\ntype OSS interface {\n    UploadFile(file *multipart.FileHeader) (string, string, error)\n    DeleteFile(key string) error\n}\n\nfunc getObjectName(filename string) string {\n    folder := time.Now().Format("20060102")\n    return fmt.Sprintf("%s/%d%s", folder, time.Now().Unix(), filename) // \u6587\u4ef6\u540d\u683c\u5f0f \u81ea\u5df1\u53ef\u4ee5\u6539 \u5efa\u8bae\u4fdd\u8bc1\u552f\u4e00\u6027\n}\n\nfunc NewOss() OSS {\n    switch global.GVA_CONFIG.System.OssType {\n    case "local":\n        Oss = &Local{}\n    case "qiniu":\n        Oss = &Qiniu{}\n    case "minio":\n        Oss = &Minio{}\n    case "aliyun":\n        Oss = &AliYun{}\n    default:\n        Oss = &Local{}\n    }\n    return Oss\n}\n')),Object(i.b)("h2",{id:"serverutilslocalgo"},"server/utils/local.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package upload\n\nimport (\n    "errors"\n    "gin-vue-admin/global"\n    "gin-vue-admin/utils"\n    "go.uber.org/zap"\n    "io"\n    "mime/multipart"\n    "os"\n    "path"\n    "strings"\n    "time"\n)\n\ntype Local struct{}\n\n// Upload \u4e0a\u4f20\u6587\u4ef6\nfunc (l Local) UploadFile(file *multipart.FileHeader) (string, string, error) {\n    // \u8bfb\u53d6\u6587\u4ef6\u540e\u7f00\n    ext := path.Ext(file.Filename)\n    // \u8bfb\u53d6\u6587\u4ef6\u540d\u5e76\u52a0\u5bc6\n    name := strings.TrimSuffix(file.Filename, ext)\n    name = utils.MD5V([]byte(name))\n    // \u62fc\u63a5\u65b0\u6587\u4ef6\u540d\n    filename := name + "_" + time.Now().Format("20060102150405") + ext\n    // \u5c1d\u8bd5\u521b\u5efa\u6b64\u8def\u5f84\n    mkdirErr := os.MkdirAll(global.GVA_CONFIG.Local.Path, os.ModePerm)\n    if mkdirErr != nil {\n        global.GVA_LOG.Error("function os.MkdirAll() Filed", zap.Any("err", mkdirErr.Error()))\n        return "", "", errors.New("function os.MkdirAll() Filed, err:" + mkdirErr.Error())\n    }\n    // \u62fc\u63a5\u8def\u5f84\u548c\u6587\u4ef6\u540d\n    p := global.GVA_CONFIG.Local.Path + "/" + filename\n\n    f, openError := file.Open() // \u8bfb\u53d6\u6587\u4ef6\n    if openError != nil {\n        global.GVA_LOG.Error("function file.Open() Filed", zap.Any("err", openError.Error()))\n        return "", "", errors.New("function file.Open() Filed, err:" + openError.Error())\n    }\n    defer f.Close() // \u521b\u5efa\u6587\u4ef6 defer \u5173\u95ed\n\n    out, createErr := os.Create(p)\n    if createErr != nil {\n        global.GVA_LOG.Error("function os.Create() Filed", zap.Any("err", createErr.Error()))\n\n        return "", "", errors.New("function os.Create() Filed, err:" + createErr.Error())\n    }\n    defer out.Close() // \u521b\u5efa\u6587\u4ef6 defer \u5173\u95ed\n\n    _, copyErr := io.Copy(out, f) // \u4f20\u8f93\uff08\u62f7\u8d1d\uff09\u6587\u4ef6\n    if copyErr != nil {\n        global.GVA_LOG.Error("function io.Copy() Filed", zap.Any("err", copyErr.Error()))\n        return "", "", errors.New("function io.Copy() Filed, err:" + copyErr.Error())\n    }\n    return p, filename, nil\n}\n\n// DeleteFile \u5220\u9664\u6587\u4ef6\nfunc (l Local) DeleteFile(key string) error {\n    p := global.GVA_CONFIG.Local.Path + "/" + key\n    if strings.Contains(p, global.GVA_CONFIG.Local.Path) {\n        if err := os.Remove(p); err != nil {\n            return errors.New("\u672c\u5730\u6587\u4ef6\u5220\u9664\u5931\u8d25, err:" + err.Error())\n        }\n    }\n    return nil\n}\n')),Object(i.b)("h2",{id:"serverutilsqiniugo"},"server/utils/qiniu.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package upload\n\nimport (\n    "context"\n    "errors"\n    "fmt"\n    "gin-vue-admin/global"\n    "github.com/qiniu/api.v7/v7/auth/qbox"\n    "github.com/qiniu/api.v7/v7/storage"\n    "go.uber.org/zap"\n    "mime/multipart"\n    "time"\n)\n\ntype Qiniu struct{}\n\n// UploadFile \u4e0a\u4f20\u6587\u4ef6\nfunc (*Qiniu) UploadFile(file *multipart.FileHeader) (string, string, error) {\n    putPolicy := storage.PutPolicy{Scope: global.GVA_CONFIG.Qiniu.Bucket}\n    mac := qbox.NewMac(global.GVA_CONFIG.Qiniu.AccessKey, global.GVA_CONFIG.Qiniu.SecretKey)\n    upToken := putPolicy.UploadToken(mac)\n    cfg := qiniuConfig()\n    formUploader := storage.NewFormUploader(cfg)\n    ret := storage.PutRet{}\n    putExtra := storage.PutExtra{Params: map[string]string{"x:name": "github logo"}}\n\n    f, openError := file.Open()\n    if openError != nil {\n        global.GVA_LOG.Error("function file.Open() Filed", zap.Any("err", openError.Error()))\n\n        return "", "", errors.New("function file.Open() Filed, err:" + openError.Error())\n    }\n    fileKey := fmt.Sprintf("%d%s", time.Now().Unix(), file.Filename) // \u6587\u4ef6\u540d\u683c\u5f0f \u81ea\u5df1\u53ef\u4ee5\u6539 \u5efa\u8bae\u4fdd\u8bc1\u552f\u4e00\u6027\n    putErr := formUploader.Put(context.Background(), &ret, upToken, fileKey, f, file.Size, &putExtra)\n    if putErr != nil {\n        global.GVA_LOG.Error("function formUploader.Put() Filed", zap.Any("err", putErr.Error()))\n        return "", "", errors.New("function formUploader.Put() Filed, err:" + putErr.Error())\n    }\n    return global.GVA_CONFIG.Qiniu.ImgPath + "/" + ret.Key, ret.Key, nil\n}\n\n// DeleteFile \u5220\u9664\u6587\u4ef6\nfunc (*Qiniu) DeleteFile(key string) error {\n    mac := qbox.NewMac(global.GVA_CONFIG.Qiniu.AccessKey, global.GVA_CONFIG.Qiniu.SecretKey)\n    cfg := qiniuConfig()\n    bucketManager := storage.NewBucketManager(mac, cfg)\n    if err := bucketManager.Delete(global.GVA_CONFIG.Qiniu.Bucket, key); err != nil{\n        global.GVA_LOG.Error("function bucketManager.Delete() Filed", zap.Any("err", err.Error()))\n        return errors.New("function bucketManager.Delete() Filed, err:" + err.Error())\n    }\n    return nil\n}\n\n// qiniuConfig \u6839\u636e\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u8fd4\u56de\u4e03\u725b\u4e91\u7684\u914d\u7f6e\nfunc qiniuConfig() *storage.Config {\n    cfg := storage.Config{\n        UseHTTPS: global.GVA_CONFIG.Qiniu.UseHTTPS,\n        UseCdnDomains: global.GVA_CONFIG.Qiniu.UseCdnDomains,\n    }\n    switch global.GVA_CONFIG.Qiniu.Zone { // \u6839\u636e\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\u7a7a\u95f4\u5bf9\u5e94\u7684\u673a\u623f\n    case "ZoneHuadong":\n        cfg.Zone = &storage.ZoneHuadong\n    case "ZoneHuabei":\n        cfg.Zone = &storage.ZoneHuabei\n    case "ZoneHuanan":\n        cfg.Zone = &storage.ZoneHuanan\n    case "ZoneBeimei":\n        cfg.Zone = &storage.ZoneBeimei\n    case "ZoneXinjiapo":\n        cfg.Zone = &storage.ZoneXinjiapo\n    }\n    return &cfg\n}\n')),Object(i.b)("h2",{id:"serverutilsminiogo"},"server/utils/minio.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package upload\n\nimport (\n    "context"\n    "errors"\n    "fmt"\n    "gin-vue-admin/global"\n    "go.uber.org/zap"\n    "mime/multipart"\n\n    "github.com/minio/minio-go/v7"\n    "github.com/minio/minio-go/v7/pkg/credentials"\n)\n\ntype Minio struct{}\n\n// UploadFile \u4e0a\u4f20\u6587\u4ef6\nfunc (*Minio) UploadFile(file *multipart.FileHeader) (string, string, error) {\n    client, newErr := minio.New(global.GVA_CONFIG.Minio.Endpoint, &minio.Options{ // \u521d\u59cb\u5316minio client\u5bf9\u8c61\n        Creds: credentials.NewStaticV4(global.GVA_CONFIG.Minio.Id, global.GVA_CONFIG.Minio.Secret, global.GVA_CONFIG.Minio.Token),\n        Secure: global.GVA_CONFIG.Minio.UseSsl,\n    })\n    if newErr != nil {\n        global.GVA_LOG.Error("function minio.New() Filed", zap.Any("err", newErr.Error()))\n        return "", "", errors.New("function oss.New() Filed, err:" + newErr.Error())\n    }\n    ctx := context.Background()\n    if bucketErr := client.MakeBucket(ctx, global.GVA_CONFIG.Minio.Bucket, minio.MakeBucketOptions{Region: ""}); bucketErr != nil {\n        if exists, existsErr := client.BucketExists(ctx, global.GVA_CONFIG.Minio.Bucket); !exists && existsErr != nil { // \u68c0\u67e5\u6211\u4eec\u662f\u5426\u5df2\u7ecf\u62e5\u6709\u6b64\u5b58\u50a8\u6876(\u5982\u679c\u60a8\u8fd0\u884c\u4e24\u6b21\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5)\n            global.GVA_LOG.Error("function client.BucketExists() Filed", zap.Any("err", existsErr.Error()))\n            return "", "", errors.New("function client.BucketExists() Filed, err:" + existsErr.Error())\n        }\n        global.GVA_LOG.Info(fmt.Sprintf("We already own %s\\n", global.GVA_CONFIG.Minio.Bucket))\n    } else {\n        global.GVA_LOG.Info(fmt.Sprintf("Successfully created %s\\n", global.GVA_CONFIG.Minio.Bucket))\n    }\n\n    objectName := getObjectName(file.Filename)\n\n    f, openErr := file.Open()\n    if openErr != nil {\n        global.GVA_LOG.Error("function file.Open() Filed", zap.Any("err", openErr.Error()))\n\n        return "", "", errors.New("function file.Open() Filed, err:" + openErr.Error())\n    }\n\n    // \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b\n    contentType := file.Header.Get("content-type")\n\n    info, putErr := client.PutObject(ctx, global.GVA_CONFIG.Minio.Bucket, objectName, f, file.Size, minio.PutObjectOptions{ContentType: contentType})\n    if putErr != nil {\n        global.GVA_LOG.Error("function client.PutObject() Filed", zap.Any("err", putErr.Error()))\n        return "", "", errors.New("function client.PutObject() Filed, err:" + putErr.Error())\n    }\n\n    global.GVA_LOG.Info(fmt.Sprintf("Successfully uploaded %s of size %d\\n", objectName, info))\n    return global.GVA_CONFIG.Minio.Path + "/" + global.GVA_CONFIG.Minio.Bucket + "/" + objectName, objectName, nil\n}\n\n// DeleteFile \u5220\u9664\u6587\u4ef6\nfunc (*Minio) DeleteFile(key string) error {\n    client, newErr := minio.New(global.GVA_CONFIG.Minio.Endpoint, &minio.Options{\n        Creds: credentials.NewStaticV4(global.GVA_CONFIG.Minio.Id, global.GVA_CONFIG.Minio.Secret, global.GVA_CONFIG.Minio.Token),\n        Secure: global.GVA_CONFIG.Minio.UseSsl,\n    }) // Initialize minio client object.\n    if newErr != nil {\n        global.GVA_LOG.Error("function minio.New() Filed", zap.Any("err", newErr.Error()))\n        return errors.New("function minio.New() Filed, err:" + newErr.Error())\n    }\n    opts := minio.RemoveObjectOptions{GovernanceBypass: true}\n    removeErr := client.RemoveObject(context.Background(), global.GVA_CONFIG.Minio.Bucket, key, opts)\n    if removeErr != nil {\n        global.GVA_LOG.Error("function client.RemoveObject() Filed", zap.Any("err", removeErr.Error()))\n        return errors.New("function client.RemoveObject() Filed, err:" + removeErr.Error())\n    }\n    return nil\n}\n')),Object(i.b)("h2",{id:"serverutilsaliyungo"},"server/utils/aliyun.go"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),'package upload\n\nimport (\n    "errors"\n    "gin-vue-admin/global"\n    "go.uber.org/zap"\n    "mime/multipart"\n\n    "github.com/aliyun/aliyun-oss-go-sdk/oss"\n)\n\n\ntype AliYun struct{}\n\n// UploadFile \u4e0a\u4f20\u6587\u4ef6\nfunc (*AliYun) UploadFile(file *multipart.FileHeader) (string, string, error) {\n    var storageType oss.Option\n    client, newErr := oss.New(global.GVA_CONFIG.Aliyun.Endpoint, global.GVA_CONFIG.Aliyun.AccessKeyID, global.GVA_CONFIG.Aliyun.SecretAccessKey, oss.Timeout(10, 120))\n    if newErr != nil {\n        global.GVA_LOG.Error("function oss.New() Filed", zap.Any("err", newErr.Error()))\n        return "", "", errors.New("function oss.New() Filed, err:" + newErr.Error())\n    }\n\n    bucket, bucketErr := client.Bucket(global.GVA_CONFIG.Aliyun.Bucket) // \u83b7\u53d6\u5b58\u50a8\u7a7a\u95f4\n    if bucketErr != nil {\n        global.GVA_LOG.Error("function client.Bucket() Filed", zap.Any("err", bucketErr.Error()))\n        return "", "", errors.New("function client.Bucket() Filed, err:" + bucketErr.Error())\n    }\n\n    switch global.GVA_CONFIG.Aliyun.StorageClassType { // \u6839\u636e\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\n    case "Standard": // \u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u4e3a\u6807\u51c6\u5b58\u50a8\n        storageType = oss.ObjectStorageClass(oss.StorageStandard)\n    case "IA": // \u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u4e3a\u5f88\u5c11\u8bbf\u95ee\u5b58\u50a8\n        storageType = oss.ObjectStorageClass(oss.StorageIA)\n    case "Archive": // \u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u4e3a\u5f52\u6863\u5b58\u50a8\u3002\n        storageType = oss.ObjectStorageClass(oss.StorageArchive)\n    case "ColdArchive": // \u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u4e3a\u5f52\u6863\u5b58\u50a8\u3002\n        storageType = oss.ObjectStorageClass(oss.StorageColdArchive)\n    default: // \u65e0\u5339\u914d\u7ed3\u679c\u5c31\u662f\u6807\u51c6\u5b58\u50a8\n        storageType = oss.ObjectStorageClass(oss.StorageStandard)\n    }\n\n    f, openError := file.Open() // \u8bfb\u53d6\u6587\u4ef6\n    if openError != nil {\n        global.GVA_LOG.Error("function file.Open() Filed", zap.Any("err", openError.Error()))\n        return "", "", errors.New("function file.Open() Filed, err:" + openError.Error())\n    }\n    contentType := file.Header.Get("content-type") // \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b\n    objectType := oss.ContentType(contentType)\n    var objectAcl oss.Option\n    switch global.GVA_CONFIG.Aliyun.ACLType { // \u6839\u636e\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6307\u5b9a\u8bbf\u95ee\u6743\u9650\n    case "private": // \u6307\u5b9a\u8bbf\u95ee\u6743\u9650\u4e3a\u79c1\u6709\u8bfb\u5199\n        objectAcl = oss.ObjectACL(oss.ACLPrivate) // \u6307\u5b9a\u8bbf\u95ee\u6743\u9650\u4e3a\u516c\u5171\u8bfb\n    case "public-read":\n        objectAcl = oss.ObjectACL(oss.ACLPublicRead) // \u6307\u5b9a\u8bbf\u95ee\u6743\u9650\u4e3a\u516c\u5171\u8bfb\n    case "public-read-write":\n        objectAcl = oss.ObjectACL(oss.ACLPublicReadWrite) // \u6307\u5b9a\u8bbf\u95ee\u6743\u9650\u4e3a\u516c\u5171\u8bfb\u5199\n    case "default":\n        objectAcl = oss.ObjectACL(oss.ACLDefault) // \u6307\u5b9a\u8bbf\u95ee\u6743\u9650\u4e3a\u516c\u5171\u8bfb\n    default:\n        objectAcl = oss.ObjectACL(oss.ACLPrivate) // \u9ed8\u8ba4\u4e3a\u8bbf\u95ee\u6743\u9650\u4e3a\u516c\u5171\u8bfb\n    }\n    objectName := getObjectName(file.Filename) // \u6587\u4ef6\u5bf9\u8c61\u540d\n    putErr := bucket.PutObject(objectName, f, storageType, objectType, objectAcl) // \u4e0a\u4f20\n    if putErr != nil {\n        global.GVA_LOG.Error("function bucket.PutObject() Filed", zap.Any("err", putErr.Error()))\n        return "", "", errors.New("function bucket.PutObject() Filed, err:" + putErr.Error())\n    }\n\n    return global.GVA_CONFIG.Aliyun.Path + "/" + objectName, objectName, nil\n}\n\n// DeleteFile \u5220\u9664\u6587\u4ef6\nfunc (*AliYun) DeleteFile(key string) error {\n    client, newErr := oss.New(global.GVA_CONFIG.Aliyun.Endpoint, global.GVA_CONFIG.Aliyun.AccessKeyID, global.GVA_CONFIG.Aliyun.SecretAccessKey, oss.Timeout(10, 120))\n    if newErr != nil {\n        global.GVA_LOG.Error("function oss.New() Filed", zap.Any("err", newErr.Error()))\n        return errors.New("function oss.New() Filed, err:" + newErr.Error())\n    }\n\n    // \u83b7\u53d6\u5b58\u50a8\u7a7a\u95f4\u3002\n    bucket, bucketErr := client.Bucket(global.GVA_CONFIG.Aliyun.Bucket)\n    if bucketErr != nil {\n        global.GVA_LOG.Error("function client.Bucket() Filed", zap.Any("err", bucketErr.Error()))\n        return errors.New("function client.Bucket() Filed, err:" + bucketErr.Error())\n    }\n\n    // \u5220\u9664\u5355\u4e2a\u6587\u4ef6\u3002objectName\u8868\u793a\u5220\u9664OSS\u6587\u4ef6\u65f6\u9700\u8981\u6307\u5b9a\u5305\u542b\u6587\u4ef6\u540e\u7f00\u5728\u5185\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u4f8b\u5982abc/efg/123.jpg\u3002\n    // \u5982\u9700\u5220\u9664\u6587\u4ef6\u5939\uff0c\u8bf7\u5c06objectName\u8bbe\u7f6e\u4e3a\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\u540d\u79f0\u3002\u5982\u679c\u6587\u4ef6\u5939\u975e\u7a7a\uff0c\u5219\u9700\u8981\u5c06\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709object\u5220\u9664\u540e\u624d\u80fd\u5220\u9664\u8be5\u6587\u4ef6\u5939\u3002\n    if err := bucket.DeleteObject(key); err != nil {\n        global.GVA_LOG.Error("function bucket.DeleteObject() Filed!", zap.Any("err", err.Error()))\n        return errors.New("function bucket.DeleteObject() Filed, err:" + err.Error())\n    }\n    return nil\n}\n')),Object(i.b)("p",null,"\u4f7f\u7528\u4ee3\u7801"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-go"}),"// \u4e0a\u4f20\u6587\u4ef6\noss := upload.NewOss()\nfilePath, key, uploadErr := oss.UploadFile(header)\n// \u5220\u9664\u6587\u4ef6\noss := upload.NewOss()\nerr := oss.DeleteFile(key)\n")))}u.isMDXComponent=!0}}]);